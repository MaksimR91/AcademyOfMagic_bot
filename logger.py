# logger.py  ‚Äì‚Äì –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è, –Ω–æ 100 % —Ä–∞–±–æ—á–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
import logging, os
from datetime import datetime

FMT = "[%(asctime)s] [%(levelname)s] %(message)s"
DATEFMT = "%Y-%m-%d %H:%M:%S"

root = logging.getLogger()
root.setLevel(logging.INFO)

# console ‚Üí Render dashboard
if not any(isinstance(h, logging.StreamHandler) for h in root.handlers):
    sh = logging.StreamHandler()     # stderr
    sh.setFormatter(logging.Formatter(FMT, DATEFMT))
    root.addHandler(sh)

# –ü—Ä–æ–¥—É–±–ª–∏—Ä—É–µ–º handlers –≤ gunicorn.error (–¥–µ–ª–∞—Ç—å –¥–æ forka!)
guni = logging.getLogger("gunicorn.error")
for h in root.handlers:
    if h not in guni.handlers:
        guni.addHandler(h)

root.info("üîä Logging ready (pid=%s)", os.getpid())
# ------------------------------------------------------------
#  –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É `logger`, —á—Ç–æ–±—ã
#  ‚Äúfrom logger import logger‚Äù –ø—Ä–æ–¥–æ–ª–∂–∞–ª–æ —Ä–∞–±–æ—Ç–∞—Ç—å.
#  –•–æ—Ç–∏—Ç–µ ‚Äî –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å root, —Ö–æ—Ç–∏—Ç–µ ‚Äî
#  –æ—Ç–¥–µ–ª—å–Ω—ã–π namespace-–ª–æ–≥–≥–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞ ‚Äì —Ä–∞–∑–Ω–∏—Ü—ã –Ω–µ—Ç.
# ------------------------------------------------------------
logger = root            # –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –æ–±—ä–µ–∫—Ç